// Function to click on all matching buttons and handle confirmation dialogs
async function clickDeleteOfflineButtons() {
    // Helper function to delay execution
    const delay = ms => new Promise(res => setTimeout(res, ms));

    // Get all button elements with a title starting with "Delete"
    const buttons = document.querySelectorAll('button[title^="Delete"]');
    
    for (const button of buttons) {
        // Find the closest parent div with class 'col-12'
        const parentDiv = button.closest('div.col-12');
        
        if (parentDiv) {
            // Find the div containing the text link within the parent div
            const textDiv = parentDiv.querySelector('div a');
            
            // Check if the text starts with "OFFLINE"
            if (textDiv && textDiv.textContent.trim().startsWith('OFFLINE')) {
                // Click the button
                console.log(`Clicking button with title: ${button.title}`);
                button.click();
                
                // Wait for the confirmation dialog
                await delay(1000); // Adjust timeout as necessary
                const confirmationMessage = document.querySelector('.p-confirm-dialog-message');
                
                if (confirmationMessage && confirmationMessage.textContent.includes(textDiv.textContent.trim())) {
                    console.log(`Confirming deletion for: ${textDiv.textContent.trim()}`);
                    // Find and click the confirmation button (assuming it is the first button in the dialog)
                    const confirmButton = document.querySelector('.p-confirm-dialog-accept');
                    if (confirmButton) {
                        confirmButton.click();
                        // Wait for the confirmation action to complete
                        await delay(1000); // Adjust timeout as necessary
                    }
                }
            }
        }
    }
}

// Execute the function
clickDeleteOfflineButtons();
