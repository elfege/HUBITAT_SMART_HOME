<!DOCTYPE html>
<html>
<head>
</head>
<body onload="init()">

 <table style='width:100%' border:1px><tr>
 <th>
      <table>
        <tr>
          <SPAN class='sliderSpan'>`+deviceLabel.toUpperCase()+`</SPAN>
          <div class='slidecontainer'>
            </tr>
            <tr>
              <input type='range' min='0' max='100' step='1' id='`+deviceId+`' onmouseup='setLevel(id, value)'>
            </tr>
            <tr>
              <span id=`+spanSliderId+`></span> 
              <p></p>
            </tr>
            <tr>
          </div>
          <button class="sliderButton" id=`+deviceIdLevelButton+` onclick='toggleDevice(cmdSwitch,id)'>`+deviceLabel.toLowerCase()+`</button>
        </tr>
      </table>
    </th>
    </tr><tr>
    </table>

</body>
<script>

function setLevel(id, value)
{
  //console.log(value+" "+id);
  // device accepting "toggleDevice" command
  var url = "http://192.168.10.70/apps/api/"+appNumber+"/devices/"+id+"/setLevel/"+value+"?"+access_token;
  //http://192.168.10.70/apps/api/"+appNumber+"/devices/2598/setLevel/10?+access_tokenvar 

  //http://192.168.10.70/apps/api/1348/devices/2631/setLevel/75?access_token=8b5615ed-43a6-4318-bd88-af5f1e2c30bd
  var xhttp = new XMLHttpRequest();
  xhttp.open("GET", url, true);
  xhttp.send();

  setTimeout(function(){getData(id)}, 1000);

  //levelUpdate(id, value);
  // setLevel/50
}
function sliderEventListener(){
  //console.log("spanIdList = "+spanIdList);
  //console.log("sliderEventListener()");
  // create an event listener for all sliders inputs, if any
  var b = spanIdList.length;
  var n = 0;
  //console.log("b = "+b+" n = "+n);
  for (b != 0; n < b; n++ ) { 
    //[deviceId, spanSliderId]  
    var slider = spanIdList[n][0]; // slider object id
    var output = spanIdList[n][1]; // span object that shows the value number
    //console.log("creating listener for "+slider+" && "+output);
    var rangeInput = document.getElementById(spanIdList[n][0]);
    
    //classic oninput update
    rangeInput.addEventListener("input", sliderOutput(slider, output, n), false);
  }
}

function sliderOutput(sliderObj, spanObj,n)
{
  var slider = document.getElementById(sliderObj);
  var output = document.getElementById(spanObj);

  //allows to see changes as cursor runs
  output.value = slider.value; // update the slider position
  output.innerHTML = slider.value;// update span number dispayed value 
  
  //real time (sort of...) refresh, don't wait for next intervaled refreshAll(); 
  refreshSlider(spanIdList[n][0], output.value, "");
  //refreshSlider(spanIdList[n][0], output.innerHTML, ""); 


  slider.oninput = function() 
  {
    //updates cursor and number value once input done
    output.innerHTML = this.value;// update span number dispayed value 
    output.value = slider.value; // update the slider position

    // console.log("slider.value is:"+slider.value);
    // console.log("deviceId:"+sliderObj+"button");
    if(slider.value == 0)
    {
      document.getElementById(sliderObj+"button").innerHTML = "off";
      var calledBy = "sliderOutput 524"
      updateButtonColor(sliderObj+"button", "off", calledBy);
    }
    else
    {
      document.getElementById(sliderObj+"button").innerHTML = "on";
      var calledBy = "sliderOutput 895"
      updateButtonColor(sliderObj+"button", "on", calledBy);
    }
  };  
}
</script>
</html>