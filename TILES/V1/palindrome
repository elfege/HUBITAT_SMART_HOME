/******************************FASTEST****************************************************/


var isPalindrome = function(head) {

    // Store all values from the linked list in an array
    let values = [];
    while (head) {
    values.push(head.val);
    head = head.next;
    }
    let valuesCopy = [...values]
    valuesCopy.reverse()
    
    return values.every((val, index) => val === valuesCopy[index])
};

/******************************SECOND FASTEST****************************************************/


var isPalindrome = function(head) {

    // Store all values from the linked list in an array
    let values = [];
    while (head) {
    values.push(head.val);
    head = head.next;
    }
     var s = values.length;
     var a = s - 1;

    for(var i=0; i<s; i++)
    {
        //console.log("values[i]:"+values[i]+" values[a]:"+values[a]);
        if(values[i] == values[a])
        {
            a -= 1;
        }
        else
        {
            //console.log("not a palindrome");
            return false;
        }
    }
    return true;

};
    

var isPalindrome = function(head) {

    // Store all values from the linked list in an array
    let values = [];
    while (head) {
    values.push(head.val);
    head = head.next;
    }
    let reverse = []
    values.map((e) => {
        reverse.unshift(e);
    });
    
    return values.every((val, index) => val === reverse[index])
};
